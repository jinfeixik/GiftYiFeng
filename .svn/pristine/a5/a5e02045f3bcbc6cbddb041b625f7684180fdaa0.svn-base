package com.qst.dao.impl;

import java.util.List;

import javax.annotation.Resource;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
import org.springframework.stereotype.Repository;

import com.qst.dao.TbGoodsDetailInfoDao;
import com.qst.entity.TbGoodsDetailInfo;

/**
 * @author 袁滢yuanying
 * @date 2019-8-6下午8:21:05
 * @version v1.0 针对数据库表的商品的添加，删除，上架，下架，修改
 */
@Repository
public class TbGoodsDetailInfoDaoImpl extends HibernateDaoSupport implements
		TbGoodsDetailInfoDao {

	@Resource
	public void setSF(SessionFactory sessionFactory) {
		super.setSessionFactory(sessionFactory);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.qst.dao.TbGoodsDetailInfoDao#addTbGoodsDetailInfo(com.qst.entity.
	 * TbGoodsDetailInfo)添加商品
	 */
	@Override
	public void addTbGoodsDetailInfo(TbGoodsDetailInfo tbGoodsDetailInfo) {
		System.out.println("添加商品dao。。。" +tbGoodsDetailInfo.toString());
		if(tbGoodsDetailInfo.getGoodsName() != null) {
			getHibernateTemplate().save(tbGoodsDetailInfo);
			getHibernateTemplate().flush();
		}
		
		System.out.println(tbGoodsDetailInfo.getGoodsId());
		System.out.println("商品" +tbGoodsDetailInfo.getGoodsName());
		//TbGoodsDetailInfo tb = (TbGoodsDetailInfo) getHibernateTemplate().get(TbGoodsDetailInfo.class, tbGoodsDetailInfo.getGoodsId()+1);
		//System.out.println(tb.getGoodsId());
		/*if(tb != null && tb.getGoodsName() == null) {
			System.out.println(tb.toString());
			getHibernateTemplate().delete(tb);
			System.out.println("删除完成");
		}*/
		
	}

	@Override
	public void statusGoods(int status) {


	}

	@Override
	public List<TbGoodsDetailInfo> findTbGoodsDetailInfos(String hql) {
		List<TbGoodsDetailInfo> tbGoodsDetailInfos = getHibernateTemplate().find(hql);
		System.out.println("商品个数  = " +tbGoodsDetailInfos.size());
		return tbGoodsDetailInfos;
	}

	@Override
	public List<TbGoodsDetailInfo> findTbGoodsDetailInfos(String hql,
			int[] goodIds) {
		List<TbGoodsDetailInfo> tbGoodsDetailInfos = getHibernateTemplate().find(hql, goodIds);
		return tbGoodsDetailInfos;
	}

	@Override
	public void deleteTbGoodsDetailInfo(int goodsId) {
		TbGoodsDetailInfo info = (TbGoodsDetailInfo) getHibernateTemplate().get(TbGoodsDetailInfo.class, goodsId);
		if(info != null) {
		getHibernateTemplate().delete(info);
		}
		
	}

	@Override
	public TbGoodsDetailInfo findTbGoodsDetailInfo(int goodsId) {
		TbGoodsDetailInfo tbGoodsDetailInfo = (TbGoodsDetailInfo)getHibernateTemplate().get(TbGoodsDetailInfo.class, goodsId);
		return tbGoodsDetailInfo;
	}

	@Override
	public void updateTbGoodsDetailInfo(TbGoodsDetailInfo tbGoodsDetailInfo) {
		System.out.println("修改dao..");
		
		getHibernateTemplate().update(tbGoodsDetailInfo);
		
	}
	
	
	

	
}
