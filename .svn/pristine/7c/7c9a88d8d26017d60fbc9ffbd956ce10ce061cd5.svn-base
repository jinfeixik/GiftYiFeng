package com.qst.dao.impl;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.hibernate.HibernateException;
import org.hibernate.SessionFactory;
import org.hibernate.classic.Session;
import org.springframework.jms.connection.SessionProxy;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;
import org.springframework.stereotype.Repository;

import com.qst.dao.TbShoppingCarDao;
import com.qst.entity.TbGoodsDetailInfo;
import com.qst.entity.TbGoodsStyleInfo;
import com.qst.entity.TbShoppingCar;

/**
 * @author 杨惠(yanghui)
 * @date 2019/8/6
 * @version v1.0
 */
@Repository
public class TbShoppingCarDaoImpl extends HibernateDaoSupport implements TbShoppingCarDao {

	@Resource
	public void setSF(SessionFactory sessionFactory) {
		super.setSessionFactory(sessionFactory);
	}

	@Override
	public void addShoppingCar(TbShoppingCar tbShoppingCar) {
		/* System.out.println("添加购物车"); */
		getHibernateTemplate().save(tbShoppingCar);

	}

	@Override
	public int findShoppingCarTotalNumber(int userId) {
		String hql = "select count(*) from TbShoppingCar where userId = " + userId;
		List<Object> obj = getHibernateTemplate().find(hql);
		int count = Integer.parseInt(obj.get(0).toString());
		return count;
	}

	public TbShoppingCar findShoppingCarById(int shoppingCarId){
		TbShoppingCar tbShoppingCar = (TbShoppingCar) getHibernateTemplate().get(TbShoppingCar.class, shoppingCarId);
		return tbShoppingCar;
	}
	
	public void updateShoppingCar(TbShoppingCar tbShoppingCar){
		getHibernateTemplate().update(tbShoppingCar);
	}
	

	public List<TbShoppingCar> findTbShoppingCar(int userId){	
		String hql = "from TbShoppingCar where userId = ?";
		List<TbShoppingCar> tbShoppingCars = getHibernateTemplate().find(hql, userId);
		return tbShoppingCars;
	}

	@Override
	public void deleteShoppingCarInfo(int shoppingId) {
		TbShoppingCar cars= (TbShoppingCar) getHibernateTemplate().get(TbShoppingCar.class, shoppingId);
		getHibernateTemplate().delete(cars);
		
	}

}
