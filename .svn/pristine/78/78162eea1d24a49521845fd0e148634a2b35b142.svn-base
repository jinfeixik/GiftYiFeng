package com.qst.action;

import java.util.List;

import javax.security.auth.message.callback.PrivateKeyCallback.Request;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import com.qst.entity.TbUserAddressInfo;
import com.qst.service.TbUserAddressInfoService;

/**
 * @author 杨惠(yanghui)
 * @date 2019/8/9 9:27
 * @version v1.0
 */
@Controller
public class AddAddressAction {

	@Autowired
	private TbUserAddressInfo tbUserAddressInfo;
	@Autowired
	private TbUserAddressInfoService tbUserAddressInfoService;

	private List<TbUserAddressInfo> tbUserAddressInfos;
	
	private int addressId;

	public String addAddress() {
		System.out.println("添加地址");
		return "success";
	}

	//添加收货人地址
	public String addReciverAddress() {
		System.out.println("添加收货人地址");
		tbUserAddressInfo.setUserId(1);
		// 添加新地址
		tbUserAddressInfoService.addAddress(tbUserAddressInfo);
		// 新地址默认值不为空
		if (tbUserAddressInfo.getAddressDefaultAddress()!=null) {
			/*int newDefal = tbUserAddressInfo.getAddressDefaultAddress();
			// 存入添加地址默认原始值
			int newDefal1 = tbUserAddressInfo.getAddressDefaultAddress();*/
			int newDefal =0,newDefal1=0;
			System.out.println("新添地址值：" + newDefal);
			// 查找用户所有地址信息
			tbUserAddressInfos = tbUserAddressInfoService
					.findUserId(tbUserAddressInfo.getUserId());
			for (TbUserAddressInfo userAddress : tbUserAddressInfos) {
				// 如果新增地址设为默认
				if (newDefal == 0) {
					// 判断该用户以前是否有默认地址
					if (!userAddress.getAddressDefaultAddress().equals(null)) {
						// 将前默认地址设为1
						userAddress.setAddressDefaultAddress(1);
					}
				}
				System.out.println("默认地址值"+ userAddress.getAddressDefaultAddress());
				if (newDefal1 == 0) {
					// 将新增地址设为默认
					tbUserAddressInfo.setAddressDefaultAddress(0);
				}
			}
		}else {
			tbUserAddressInfo.setAddressDefaultAddress(1);
		}
		
	
		System.out.println("说话地址"+tbUserAddressInfo.getAddressReciverAddress());
		return "success";
	}
	
	public String deleteAddress(){
		System.out.println("删除地址");
		tbUserAddressInfoService.delAddress(addressId);
		return "success";
	}
	
	public String toUpdate(){
		tbUserAddressInfo = tbUserAddressInfoService.findAddressByAddressId(addressId);
		return "success";
	}
	public String updateAddress(){
		System.out.println("修改地址");
		tbUserAddressInfoService.delAddress(addressId);
		tbUserAddressInfoService.addAddress(tbUserAddressInfo);
		return "success";
	}
	
	//显示地址列表
	public String addressList(){
		System.out.println("我的地址");
		int userId = 1;
		tbUserAddressInfos = tbUserAddressInfoService.findUserId(userId);
		return "success";
	}
	
	public String beDefault(){
		int userId = 1;
		tbUserAddressInfos = tbUserAddressInfoService.findUserId(userId);
		for(TbUserAddressInfo tbUserAddressInfo:tbUserAddressInfos){
			tbUserAddressInfo.setAddressDefaultAddress(1);
		}
		tbUserAddressInfo = tbUserAddressInfoService.findAddressByAddressId(addressId);
		/*System.out.println("addressId"+addressId);*/
		tbUserAddressInfo.setAddressDefaultAddress(0);
		/*System.out.println("姓名"+tbUserAddressInfo.getAddressReciverName());
		System.out.println("地址"+tbUserAddressInfo.getAddressDefaultAddress());*/
		tbUserAddressInfoService.updateAddress(tbUserAddressInfo);
		return "success";
	}

	public TbUserAddressInfo getTbUserAddressInfo() {
		return tbUserAddressInfo;
	}

	public void setTbUserAddressInfo(TbUserAddressInfo tbUserAddressInfo) {
		this.tbUserAddressInfo = tbUserAddressInfo;
	}

	public TbUserAddressInfoService getTbUserAddressInfoService() {
		return tbUserAddressInfoService;
	}

	public void setTbUserAddressInfoService(
			TbUserAddressInfoService tbUserAddressInfoService) {
		this.tbUserAddressInfoService = tbUserAddressInfoService;
	}

	public List<TbUserAddressInfo> getTbUserAddressInfos() {
		return tbUserAddressInfos;
	}

	public void setTbUserAddressInfos(List<TbUserAddressInfo> tbUserAddressInfos) {
		this.tbUserAddressInfos = tbUserAddressInfos;
	}

	public int getAddressId() {
		return addressId;
	}

	public void setAddressId(int addressId) {
		this.addressId = addressId;
	}
	
	

}
